apply plugin: 'com.android.application'

android {
    compileSdkVersion  23
    buildToolsVersion  "23.0.3"

    defaultConfig {
        applicationId "com.example.markzhang.markimgjni_demo"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode  1
        versionName "1.0"
    }

    sourceSets.main.jni.srcDirs = [] // disable automatic ndk-build call, which ignore our Android.mk
    sourceSets.main.jniLibs.srcDir 'src/main/libs'  // This is not necessary unless you have precompiled libraries in your project.

    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        workingDir file('src/main')
        commandLine "ndk-build.cmd",
        '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
        '-j', Runtime.runtime.availableProcessors(),
        'all',
        'NDK_DEBUG=1'
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    task cleanNative(type: Exec) {
        workingDir file('src/main')
        commandLine "ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn cleanNative

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles.add(file('proguard-android.txt'))
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.+'
}
